<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android = "http://schemas.android.com/apk/res/android"
          package = "music.dexterous.com.dexterousmusic"
    >


    <uses-permission android:name = "android.permission.INTERNET" />

    <!-- TODO Check we require this permission or not -->
    <uses-permission android:name = "android.permission.READ_EXTERNAL_STORAGE" />

    <!-- Required for music to run when phone is locked, partial wake lock is used -->
    <uses-permission android:name = "android.permission.WAKE_LOCK" />

    <!-- TODO we required this permission or not for @MediaScannerCompletedReceiver or not -->
    <uses-permission android:name = "android.permission.MEDIA_CONTENT_CONTROL" />

    <!-- used for notifing user that he is about to remove widget when he drags it on remove widget icon. -->
    <!-- This permission granted by default on Android 6.0+ devices. -->
    <uses-permission android:name = "android.permission.VIBRATE" />

    <!-- used for drawing widget. This permission must be granted before calling AudioWidget.show(). -->
    <uses-permission android:name = "android.permission.SYSTEM_ALERT_WINDOW" />

    <!-- For drawing waves openGL ES version 2 -->
    <uses-feature
        android:glEsVersion = "0x00020000"
        android:required = "true"
        />

    <uses-permission android:name = "android.permission.RECORD_AUDIO" />
    <uses-permission android:name = "android.permission.MODIFY_AUDIO_SETTINGS" />


    <uses-permission android:name = "android.permission.GET_TASKS" />

    <application
        android:name = ".GlobalApplication"
        android:allowBackup = "true"
        android:icon = "@mipmap/ic_launcher"
        android:label = "@string/app_name"
        android:supportsRtl = "true"
        android:theme = "@style/AppTheme"
        >
        <activity
            android:name = ".activity.SplashActivity"
            android:label = "@string/app_name"
            android:theme = "@style/AppThemeDark.Splash"
            >
            <intent-filter >
                <action android:name = "android.intent.action.MAIN" />

                <category android:name = "android.intent.category.DEFAULT" />
                <category android:name = "android.intent.category.LAUNCHER" />
                <category android:name = "android.intent.category.APP_MUSIC" />
            </intent-filter >
            <intent-filter >
                <action android:name = "android.intent.action.VIEW" />
                <category android:name = "android.intent.category.DEFAULT" />

                <data android:mimeType = "audio/*" />
            </intent-filter >
        </activity >
        <activity
            android:name = ".activity.HomeActivity"
            android:launchMode = "singleTask"
            />
        <activity android:name = ".activity.MainActivity" />

        <service
            android:name = ".service.ScanMusicService"
            android:exported = "false"
            />
        <service
            android:name = ".service.DexterousPlayMusicService"
            android:exported = "false"
            />

        <!--            Defining Services For firebase ... -->
        <service android:name = ".service.firebase.MyFirebaseMessagingService" >
            <intent-filter >
                <action android:name = "com.google.firebase.MESSAGING_EVENT" />
            </intent-filter >
        </service >
        <service android:name = ".service.firebase.MyFirebaseInstanceIDService" >
            <intent-filter >
                <action android:name = "com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter >
        </service >

        <!-- It will fire when headset inserted or removed from phone  -->
        <receiver
            android:name = ".receiver.HeadsetBroadcastReceiver"
            >
            <intent-filter >
                <action android:name = "android.media.AUDIO_BECOMING_NOISY" />
            </intent-filter >
            <intent-filter >
                <action android:name = "android.intent.action.HEADSET_PLUG" />
            </intent-filter >
            <intent-filter >
                <action android:name = "android.intent.action.MEDIA_BUTTON" />
            </intent-filter >
        </receiver >
        <receiver android:name = ".receiver.widget.NextMusicReceiver" />
        <receiver android:name = ".receiver.widget.CloseMusicReceiver" />
        <receiver android:name = ".receiver.widget.PreviousMusicReceiver" />
        <receiver android:name = ".receiver.widget.ToggleMusicReceiver" />
        <receiver android:name = ".receiver.MediaScannerCompletedReceiver" >
            <intent-filter >
                <action android:name = "android.intent.action.MEDIA_SCANNER_FINISHED" />
                <action android:name = "android.intent.action.MEDIA_SCANNER_STARTED" />
                <!-- TODO change for audio files only -->
                <data android:scheme = "file" />
            </intent-filter >
        </receiver >

        <!-- Glide Module and cache -->
        <meta-data
            android:name = "${package}.utils.image.SetupGlideModule"
            android:value = "GlideModule"
            />
        <meta-data
            android:name = "${package}.utils.image.LimitCacheSizeGlideModule"
            android:value = "GlideModule"
            />

        <meta-data
            android:name = "io.fabric.ApiKey"
            android:value = "27f8cfedaa38568e160e85bb4a1ec48d0f60291f"
            />
    </application >

</manifest >